/* The structure of the class is
class StackQueue{
private:   
    // These are STL stacks ( http://goo.gl/LxlRZQ )
    stack<int> s1;
    stack<int> s2;
public:
    void push(int);
    int pop();
}; */
----------------------------------------------------------------------
In this method, in en-queue operation, the new element is entered 
at the top of stack1. In de-queue operation, if stack2 is empty then
all the elements are moved to stack2 and finally top of stack2 is returned.

-----------------------------------------------------------------------

/* The method push to push element into the queue */
void StackQueue :: push(int x)
 {
    s1.push(x);
 }
/*The method pop which return the element poped out of the queue*/
int StackQueue :: pop()
{
    if (s1.empty() && s2.empty()) { 
           return -1;
        } 
        
        if (s2.empty()) { 
            while (!s1.empty()) { 
                s2.push(s1.top()); 
                s1.pop(); 
            } 
        } 

        int x = s2.top(); 
        s2.pop(); 
        return x; 
}
