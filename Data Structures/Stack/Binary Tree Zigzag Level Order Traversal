/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 -------------------********************************---------------------------------------
 For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

*****************************-----------------------------------***************************************
 
 
 
 
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == NULL) return res;
        
        stack<TreeNode*> s1, s2;
        s1.push(root);
        while(!s1.empty() || !s2.empty()){
            vector<int> row1;
            while(!s1.empty()){
                TreeNode* node = s1.top();
                s1.pop();
                row1.push_back(node->val);
                
                if(node->left != NULL){
                    s2.push(node->left);
                }
                if(node->right != NULL){
                    s2.push(node->right);
                }
            }
            
            vector<int> row2;
            while(!s2.empty()){
                TreeNode* node = s2.top();
                s2.pop();
                row2.push_back(node->val);
                
                if(node->right != NULL){
                    s1.push(node->right);
                }
                if(node->left != NULL){
                    s1.push(node->left);
                }
            }
            
            if(!row1.empty()) res.push_back(row1);
            if(!row2.empty()) res.push_back(row2);
        }
        
        return res;
    }
};
