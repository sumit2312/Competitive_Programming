
/* The structure of the class is
class QueueStack{
private:
    queue<int> q1;
    queue<int> q2;
public:
    void push(int);
    int pop();
};
 */
 -------------------------------------------------------
 This method makes sure that newly entered element is always at the front of ‘q1’,
 so that pop operation just dequeues from ‘q1’. ‘q2’ is used to put every new element at front of ‘q1’.
 --------------------------------------------------------
 
/* The method push to push element into the stack */
void QueueStack :: push(int x)
{
    q2.push(x);
    while(!q1.empty()){
        q2.push(q1.front());
        q1.pop();
    }
    queue<int> q = q1; 
        q1 = q2; 
        q2 = q; 
}
/*The method pop which return the element poped out of the stack*/
int QueueStack :: pop()
{
    if (q1.empty()) {
            return -1;
    }
    int x = q1.front();  
    q1.pop(); 
    return x;
         
}
