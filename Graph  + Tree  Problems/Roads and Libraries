// Hackerrank Problem - Roads and Libraries


////***Sumit Kumar***********////

#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define int ll
#define ps push
#define pb push_back
#define INF 100005
#define MOD 1000000007
#define mp make_pair
#define REP(i,n) for (int i = 0; i < n; i++)
#define FOR(i,a,b) for (int i = a; i < b; i++)
#define REPD(i,n) for (int i = n-1; i >= 0; i--)
#define FORD(i,a,b) for (int i = a; i >= b; i--)
#define remax(a,b) a = max(a,b)
#define remin(a,b) a = min(a,b)
#define all(v) v.begin(),v.end()
#define pii pair<int,int>
#define F first
#define S second
#define mii map<int,int>
#define vi vector<int>
#define vvi vector<vi>
#define vpii vector<pair<int,int>>
#define pqi priority_queue<int>
#define pqpii priority_queue<pair<int,int>>
#define itr :: iterator it
#define WL(t) while(t --)
#define gcd(a,b) __gcd((a),(b))
#define lcm(a,b) ((a)*(b))/gcd((a),(b))
#define debug(x) cout << x << endl;
#define debug2(x,y) cout << x << " " << y << endl;
#define debug3(x,y,z) cout << x << " " << y << " " << z << endl;

vi v[INF];
bool vis[INF];
int cnt=0;

void dfs(int p){
    cnt+=1;
    vis[p]=true;
    int sz=v[p].size();
    REP(i,sz){
        if(vis[v[p][i]]==false){
            dfs(v[p][i]);
        }
    }
}

void solve(){
    int n,m,cr,cl;
    cin>>n>>m>>cl>>cr;
    FOR(i,1,n+1){
        vis[i]=false;
        v[i].clear();
    }
    REP(i,m){
        int x,y;
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    int ans=0;
    FOR(i,1,n+1){
        if(vis[i]==false){
            cnt=0;

            dfs(i);
            ans=ans+cl+ cr*(cnt-1);
        }
    }
    debug(min(ans,cl*n));
}

signed main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin>>t;
    WL(t){
        solve();
    }

}

/*
Input-
2
3 3 2 1
1 2
3 1
2 3
6 6 2 5
1 3
3 4
2 4
1 2
2 3
5 6
Output-
4
12

*/
