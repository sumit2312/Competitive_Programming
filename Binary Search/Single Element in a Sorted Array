//https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3327/

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int lo=0;
        int hi = nums.size()-1;
        while(lo<hi){
            int mid = (lo+hi)/2;
            if(mid%2==0){
                if(nums[mid]==nums[mid+1]){
                    lo=mid+2;
                }else{
                    hi=mid;
                }
            }else{
                if(nums[mid]==nums[mid-1]){
                    lo=mid+1;
                }else{
                    hi=mid;
                }
            }
        }
        return nums[lo];
    }
    
    
};
